// Code generated by protoc-gen-go.
// source: auth.proto
// DO NOT EDIT!

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	auth.proto

It has these top-level messages:
	LoginRequest
	LoginResponse
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type LoginRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type LoginResponse struct {
	Error   string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Session string `protobuf:"bytes,2,opt,name=session" json:"session,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*LoginRequest)(nil), "auth.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "auth.LoginResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion1

// Client API for Authentication service

type AuthenticationClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
}

type authenticationClient struct {
	cc *grpc.ClientConn
}

func NewAuthenticationClient(cc *grpc.ClientConn) AuthenticationClient {
	return &authenticationClient{cc}
}

func (c *authenticationClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/auth.Authentication/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Authentication service

type AuthenticationServer interface {
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
}

func RegisterAuthenticationServer(s *grpc.Server, srv AuthenticationServer) {
	s.RegisterService(&_Authentication_serviceDesc, srv)
}

func _Authentication_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(AuthenticationServer).Login(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Authentication_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.Authentication",
	HandlerType: (*AuthenticationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Authentication_Login_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x8f, 0xcb, 0x6e, 0xc2, 0x30,
	0x10, 0x45, 0x9b, 0xaa, 0xe9, 0x63, 0xd4, 0x76, 0xe1, 0x76, 0x11, 0x05, 0x21, 0xa1, 0xac, 0x58,
	0x79, 0x11, 0x3e, 0x00, 0x81, 0x10, 0x2b, 0x56, 0xf9, 0x03, 0x13, 0x86, 0x60, 0x89, 0x78, 0x8c,
	0xc7, 0x01, 0x3e, 0x9f, 0x3c, 0x11, 0xec, 0x7c, 0xee, 0x95, 0x8e, 0xef, 0x00, 0xa8, 0xca, 0x1f,
	0xa4, 0x75, 0xe4, 0x49, 0xbc, 0x35, 0xef, 0x64, 0x0d, 0xdf, 0x1b, 0x2a, 0xb4, 0xc9, 0xf0, 0x54,
	0x21, 0x7b, 0x11, 0xc3, 0x67, 0xc5, 0xe8, 0x8c, 0x2a, 0x31, 0x0a, 0x26, 0xc1, 0xf4, 0x2b, 0xbb,
	0x73, 0xd3, 0x59, 0xc5, 0x7c, 0x21, 0xb7, 0x8b, 0x5e, 0xbb, 0x6e, 0xe0, 0x64, 0x0e, 0x3f, 0xbd,
	0x87, 0x2d, 0x19, 0x46, 0xf1, 0x0f, 0x21, 0x3a, 0x47, 0xae, 0xb7, 0x74, 0x20, 0x22, 0xf8, 0x60,
	0x64, 0xd6, 0x64, 0x7a, 0xc3, 0x80, 0xe9, 0x0a, 0x7e, 0x17, 0xf5, 0x20, 0x34, 0x5e, 0xe7, 0xca,
	0xd7, 0x89, 0x48, 0x21, 0x6c, 0x95, 0x42, 0xc8, 0x76, 0xf6, 0xe3, 0xce, 0xf8, 0xef, 0x29, 0xeb,
	0xfe, 0x4c, 0x5e, 0x96, 0x63, 0x18, 0xe5, 0x54, 0x4a, 0x7d, 0x56, 0x66, 0x4f, 0x64, 0x0a, 0x59,
	0x38, 0x9b, 0x4b, 0xbc, 0xaa, 0xd2, 0x1e, 0x91, 0xb7, 0xef, 0xed, 0xe9, 0xb3, 0x5b, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x01, 0xc4, 0x2e, 0x0d, 0x08, 0x01, 0x00, 0x00,
}
